C spsc-rb+barrier+empty

// Simple one entry ring:
// prod cons     allowed action       prod cons
//    0    0 =>       prod          =>   1    0
//    0    1 =>       cons          =>   0    0
//    1    0 =>       cons          =>   1    1
//    1    1 =>       prod          =>   0    1

{}

// Here, we start at prod==0,cons==0, data==0, i.e. nothing has been
// written to the ring. From here only the producer can start, and
// should write 1. Afterwards, consumer can continue and read 1 to
// data. Can we enter state prod==1, cons==1, but consumer observerd
// the incorrect value of 0?

P0(int *prod, int *cons, int *data)
{
	int p;

	p = READ_ONCE(*prod);
	if (READ_ONCE(*cons) == p) {
		WRITE_ONCE(*data, 1);
		smp_wmb();
		WRITE_ONCE(*prod, p ^ 1);
	}
}

P1(int *prod, int *cons, int *data)
{
	int c;
	int d = -1;

	c = READ_ONCE(*cons);
	if (READ_ONCE(*prod) != c) {
		smp_rmb();
		d = READ_ONCE(*data);
		smp_mb();
		WRITE_ONCE(*cons, c ^ 1);
	}
}

exists( 1:d=0 /\ prod=1 /\ cons=1 );
